{
    "version": "0.4.0",
    "uuid": "dab0a1bb-b9d0-4d58-a9a0-db2d5191ea1b",
    "session_name": "AssetsDemo_RoyalProps",
    "files": {
        "royal_king_sword.png": {
            "uri": "s3://art-core-jobbucket-7hswry7szvu3/uploads/4e301cd9-e867-4067-a3c8-971800ae3bfc/royal_king_sword.png",
            "description": "The image features a beautifully designed sword with intricate details, including a blue and gold color scheme and decorative elements on both the handle and blade. The sword appears to be shown in full view, with the entire object visible."
        },
        "royal_king_sword_2d_preview.png": {
            "uri": "s3://art-core-jobbucket-7hswry7szvu3/uploads/09a44829-bb47-4f0e-9457-c4dffffdc6da/royal_king_sword_2d_preview.png",
            "description": "The image features a sword with a decorative design. The blade appears to be polished and intricate, featuring a combination of colors, including blue and gold. The details on the hilt suggest a fantasy style, possibly inspired by mythical or historical themes. The main object, the sword, is visible in full."
        },
        "royal_king_sword.glb": {
            "uri": "s3://art-core-jobbucket-7hswry7szvu3/uploads/9becc56f-0c29-4541-8802-588e9ba8169b/royal_king_sword.glb",
            "description": "AI-generated 3D reconstruction of royal_king_sword.png: A 3D mesh. For description, see rendered image description: royal_king_sword_2d_preview.png."
        },
        "royal_king_sword_2d_preview_da4700d1.png": {
            "uri": "s3://art-core-jobbucket-7hswry7szvu3/jobs/da4700d1-9d47-4bf0-bbbb-1a696b23a59e/02_gen_textures/royal_king_sword/000/stage_3_rgb.png",
            "description": "Intermediate multi-view image used to create royal_king_sword_processed_da4700d1.glb. The image features a decorative sword with intricate designs, including ornate patterns and possibly gemstones. The sword is shown from multiple angles. The main object, the sword, appears to be fully visible in all views."
        },
        "royal_king_sword_processed_da4700d1.blend": {
            "uri": "s3://art-core-jobbucket-7hswry7szvu3/jobs/da4700d1-9d47-4bf0-bbbb-1a696b23a59e/09_final_blend/royal_king_sword/final_seed000.blend",
            "description": "Same as royal_king_sword_processed_da4700d1.glb, but a raw .blend file before .glb export."
        },
        "royal_king_sword_processed_da4700d1.glb": {
            "uri": "s3://art-core-jobbucket-7hswry7szvu3/jobs/da4700d1-9d47-4bf0-bbbb-1a696b23a59e/09_final_blend/royal_king_sword/final_seed000.glb",
            "description": "Error generating description: HTTP Error 400: Bad Request"
        },
        "royal_king_sword_processed_da4700d1_pbr_196283b9.blend": {
            "uri": "s3://art-asset-presentation-jobbucket-iqqzdaqjtvw8/jobs/196283b9-ca10-4b92-8fab-de75faf3e458/output_files/final_seed000/royal_king_sword/royal_king_sword.blend",
            "description": "Same as royal_king_sword_processed_da4700d1_pbr_196283b9.glb, but a raw .blend file before .glb export."
        },
        "royal_king_sword_processed_da4700d1_pbr_196283b9.glb": {
            "uri": "s3://art-asset-presentation-jobbucket-iqqzdaqjtvw8/jobs/196283b9-ca10-4b92-8fab-de75faf3e458/output_files/final_seed000/royal_king_sword/royal_king_sword.glb",
            "description": "Error generating description: HTTP Error 400: Bad Request"
        },
        "majestic_ornate_shield.png": {
            "uri": "s3://art-core-jobbucket-7hswry7szvu3/uploads/8b0b2b2a-88a6-40de-b963-5d5723ac11ff/majestic_ornate_shield.png",
            "description": "The image depicts an ornate shield featuring intricate designs, gold and silver embellishments, and red accents. The shield is displayed prominently against a neutral background. It appears to be shown in full and is not cropped."
        },
        "majestic_ornate_shield_2d_preview.png": {
            "uri": "s3://art-core-jobbucket-7hswry7szvu3/uploads/8012a9a2-e971-45ca-ae75-235291c72bfe/majestic_ornate_shield_2d_preview.png",
            "description": "The image shows a decorative shield featuring intricate designs, including two lions flanking a central coat of arms, adorned with flowers and a red gem. The shield is circular and appears to be fully visible without any cropping."
        },
        "majestic_ornate_shield.glb": {
            "uri": "s3://art-core-jobbucket-7hswry7szvu3/uploads/8c748fd3-56fb-4769-af40-7cb8dfebf49d/majestic_ornate_shield.glb",
            "description": "AI-generated 3D reconstruction of majestic_ornate_shield.png: A 3D mesh. For description, see rendered image description: majestic_ornate_shield_2d_preview.png."
        },
        "majestic_ornate_shield_2d_preview_dd4770e0.png": {
            "uri": "s3://art-core-jobbucket-7hswry7szvu3/jobs/dd4770e0-8f90-4a5e-8a36-1accaaee43fd/02_gen_textures/majestic_ornate_shield/000/stage_3_rgb.png",
            "description": "Intermediate multi-view image used to create majestic_ornate_shield_processed_dd4770e0.glb. The image depicts a decorative circular shield featuring intricate designs, including ornate patterns and a central emblem. The shield has a blend of colors, primarily navy blue and gold, with additional details in red and white. \n\nThe main object, which is the shield, appears to be fully visible in the image."
        },
        "majestic_ornate_shield_processed_dd4770e0.blend": {
            "uri": "s3://art-core-jobbucket-7hswry7szvu3/jobs/dd4770e0-8f90-4a5e-8a36-1accaaee43fd/09_final_blend/majestic_ornate_shield/final_seed000.blend",
            "description": "Same as majestic_ornate_shield_processed_dd4770e0.glb, but a raw .blend file before .glb export."
        },
        "majestic_ornate_shield_processed_dd4770e0.glb": {
            "uri": "s3://art-core-jobbucket-7hswry7szvu3/jobs/dd4770e0-8f90-4a5e-8a36-1accaaee43fd/09_final_blend/majestic_ornate_shield/final_seed000.glb",
            "description": "Error generating description: HTTP Error 503: Service Temporarily Unavailable"
        },
        "majestic_ornate_shield_processed_dd4770e0_pbr_f6104d8a.blend": {
            "uri": "s3://art-asset-presentation-jobbucket-iqqzdaqjtvw8/jobs/f6104d8a-e8e2-46a8-875c-4d283e5cb450/output_files/final_seed000/majestic_ornate_shield/majestic_ornate_shield.blend",
            "description": "Same as majestic_ornate_shield_processed_dd4770e0_pbr_f6104d8a.glb, but a raw .blend file before .glb export."
        },
        "majestic_ornate_shield_processed_dd4770e0_pbr_f6104d8a.glb": {
            "uri": "s3://art-asset-presentation-jobbucket-iqqzdaqjtvw8/jobs/f6104d8a-e8e2-46a8-875c-4d283e5cb450/output_files/final_seed000/majestic_ornate_shield/majestic_ornate_shield.glb",
            "description": "Error generating description: HTTP Error 503: Service Temporarily Unavailable"
        }
    },
    "art_core_jobs": {
        "da4700d1-9d47-4bf0-bbbb-1a696b23a59e": {
            "input_mesh_name": "royal_king_sword.glb",
            "result_files": [
                "royal_king_sword_2d_preview_da4700d1.png",
                "royal_king_sword_processed_da4700d1.blend",
                "royal_king_sword_processed_da4700d1.glb"
            ],
            "status": "PROCESSED",
            "stage": "ExecuteStages",
            "reservation": "97832495-69ef-492c-bcff-a99d601dc599"
        },
        "b014e572-bab7-41d1-ab89-87116fa85d39": {
            "input_mesh_name": "heroic_ornate_hammer.glb",
            "result_files": [
                "heroic_ornate_hammer_2d_preview_b014e572.png",
                "heroic_ornate_hammer_processed_b014e572.blend",
                "heroic_ornate_hammer_processed_b014e572.glb"
            ],
            "status": "PROCESSED",
            "stage": "ExecuteStages",
            "reservation": "41b5ffd8-97d8-4cca-99fa-bbef739a5afc"
        },
        "dd4770e0-8f90-4a5e-8a36-1accaaee43fd": {
            "input_mesh_name": "majestic_ornate_shield.glb",
            "result_files": [
                "majestic_ornate_shield_2d_preview_dd4770e0.png",
                "majestic_ornate_shield_processed_dd4770e0.blend",
                "majestic_ornate_shield_processed_dd4770e0.glb"
            ],
            "status": "PROCESSED",
            "stage": "ExecuteStages",
            "reservation": "aa09d21c-e0bb-46bd-92ae-f5389dfa9a01"
        }
    },
    "pbr_jobs": {
        "196283b9-ca10-4b92-8fab-de75faf3e458": {
            "input_mesh_name": "royal_king_sword_processed_da4700d1.blend",
            "result_files": [
                "royal_king_sword_processed_da4700d1_pbr_196283b9.blend",
                "royal_king_sword_processed_da4700d1_pbr_196283b9.glb"
            ],
            "status": "PROCESSED",
            "reservation": "1a2fef8e-6a9d-4041-a15d-c8000e594d03"
        },
        "4ea98c91-692c-4821-9130-c4295bf11dc3": {
            "input_mesh_name": "heroic_ornate_hammer_processed_b014e572.blend",
            "result_files": [
                "heroic_ornate_hammer_processed_b014e572_pbr_4ea98c91.blend",
                "heroic_ornate_hammer_processed_b014e572_pbr_4ea98c91.glb"
            ],
            "status": "PROCESSED",
            "reservation": "59a716f9-8808-43af-80d2-7378ffff6538"
        },
        "f6104d8a-e8e2-46a8-875c-4d283e5cb450": {
            "input_mesh_name": "majestic_ornate_shield_processed_dd4770e0.blend",
            "result_files": [
                "majestic_ornate_shield_processed_dd4770e0_pbr_f6104d8a.blend",
                "majestic_ornate_shield_processed_dd4770e0_pbr_f6104d8a.glb"
            ],
            "status": "PROCESSED",
            "reservation": "9dabc816-bd7e-45a7-8498-5473eed9d060"
        }
    },
    "art_core_jobs_logs": {
        "da4700d1-9d47-4bf0-bbbb-1a696b23a59e": [],
        "b014e572-bab7-41d1-ab89-87116fa85d39": [],
        "dd4770e0-8f90-4a5e-8a36-1accaaee43fd": []
    },
    "suggestions": {
        "prompt": [
            "Generate an image of wooden cabin, front view.",
            "Generate a simple 3D object of a elven fantasy design sofa.",
            "Generate a simple greek-style 3D vase object and a sci-fi pattern image, then use the sci-fi pattern image to stylize 3D vase textures this way (while preserving original vase texture patterns a bit). Final textures should be 2k.",
            "Generate a very detailed high-poly 3D fantasy stone dwarf sculpture in heavy armour. Final textures should be 4k.",
            "Do the following steps, but always ask me if the intermediate result is good enough to continue: 1. Generate a simple 3D viking shield image. 2. Generate a simple 3D viking shield asset using the image from previous step. 3. Generate some fantasy pattern image. 4. Perform simple stylized texturing of the shield using the fantasy pattern image5. Enhance the stylized shield by increasing texture resolution and adding displacement, resulting in 4k-textured high-poly asset.",
            "Generate a high-poly sci-fi rifle asset, and bake into a low-poly PBR-textured asset, act independently until you achieve good quality results. The textures should be 8k."
        ],
        "user": [
            "Upload a style image for texture enhancement",
            "Download final 3D asset",
            "View generated session files"
        ]
    },
    "suggestions_history": [
        {
            "timestamp": "2025-04-11T13:34:55.992119",
            "suggestions": {
                "prompt": [
                    "Generate an image of wooden cabin, front view.",
                    "Generate a simple 3D object of a elven fantasy design sofa.",
                    "Generate a simple greek-style 3D vase object and a sci-fi pattern image, then use the sci-fi pattern image to stylize 3D vase textures this way (while preserving original vase texture patterns a bit). Final textures should be 2k.",
                    "Generate a very detailed high-poly 3D fantasy stone dwarf sculpture in heavy armour. Final textures should be 4k.",
                    "Do the following steps, but always ask me if the intermediate result is good enough to continue: 1. Generate a simple 3D viking shield image. 2. Generate a simple 3D viking shield asset using the image from previous step. 3. Generate some fantasy pattern image. 4. Perform simple stylized texturing of the shield using the fantasy pattern image5. Enhance the stylized shield by increasing texture resolution and adding displacement, resulting in 4k-textured high-poly asset.",
                    "Generate a high-poly sci-fi rifle asset, and bake into a low-poly PBR-textured asset, act independently until you achieve good quality results. The textures should be 8k."
                ],
                "user": []
            }
        },
        {
            "timestamp": "2025-04-11T13:35:50.088310",
            "suggestions": {
                "prompt": [
                    "Enhance the king sword image with more intricate engravings",
                    "Generate a 3D model from the king sword image",
                    "Apply a cyberpunk stylization to the king sword image"
                ],
                "user": [
                    "Download royal_king_sword.png",
                    "Upload a style image for further customization",
                    "View 2D results"
                ]
            }
        },
        {
            "timestamp": "2025-04-11T13:37:02.025492",
            "suggestions": {
                "prompt": [
                    "Yes, proceed with generating the 3D mesh from royal_king_sword.png, then run ART Core with 2k resolution and displacement, and finally generate the PBR version."
                ],
                "user": [
                    "Cancel the operation",
                    "Adjust parameters before proceeding",
                    "View session files"
                ]
            }
        },
        {
            "timestamp": "2025-04-11T13:45:19.488394",
            "suggestions": {
                "prompt": [
                    "Convert the ART Core output blend file to a low-poly PBR-textured asset with 1024 UV resolution.",
                    "Schedule a PBR job using the ART Core result to generate a low-poly asset.",
                    "Re-run the ART Core job with modified parameters if needed."
                ],
                "user": [
                    "View ART Core output",
                    "Download the 3D model",
                    "Check job progress",
                    "Upload a new style image"
                ]
            }
        },
        {
            "timestamp": "2025-04-11T13:51:27.021553",
            "suggestions": {
                "prompt": [
                    "Generate a steampunk styled version of the king sword image with brass and copper details.",
                    "Create a futuristic variant of the king sword with neon accents and holographic effects.",
                    "Apply a silver and blue metallic texture to the king sword 3D model for a regal look."
                ],
                "user": [
                    "Upload a style image for additional texture refinement.",
                    "View ART Core output from the king sword asset.",
                    "Download the final PBR textured king sword asset."
                ]
            }
        },
        {
            "timestamp": "2025-04-11T14:03:59.894315",
            "suggestions": {
                "prompt": [
                    "Generate a highly detailed close-up image of the king sword with glowing runes and intricate metallic textures.",
                    "Create a fantasy battle scene showcasing the king sword with dynamic lighting and epic background.",
                    "Apply a steampunk style to the king sword, incorporating ornate mechanical elements and aged textures."
                ],
                "user": [
                    "Upload a new style image for further customization.",
                    "View the generated 3D files for the king sword asset.",
                    "Download the final PBR version of the king sword."
                ]
            }
        },
        {
            "timestamp": "2025-04-11T14:20:26.622993",
            "suggestions": {
                "prompt": [
                    "Generate a majestic dragon 3D model from an image prompt with full details and a solid gray background",
                    "Use style image 'X.png' to auto-texture the 3D asset 'Y.glb' with 4k displacement and high-poly details",
                    "Convert my uploaded image 'my_icon.png' into a 3D mesh using the image-to-3D tool"
                ],
                "user": [
                    "Upload style image",
                    "View session files",
                    "Download final output"
                ]
            }
        },
        {
            "timestamp": "2025-04-11T14:26:24.624143",
            "suggestions": {
                "prompt": [
                    "Generate a detailed image of a futuristic battle axe with intricate engravings and a vibrant color palette.",
                    "Create a high-poly, stylized shield asset using a provided style image and convert it to a low-poly PBR-textured model.",
                    "Convert a mystical staff image into a fully textured 3D mesh with displacement at 2k resolution using ART Core."
                ],
                "user": [
                    "Upload a style image for asset enhancement",
                    "View current session files",
                    "Download final 3D assets",
                    "Contact support for assistance"
                ]
            }
        },
        {
            "timestamp": "2025-04-11T14:39:43.432966",
            "suggestions": {
                "prompt": [
                    "Generate a detailed image of a dragon sword with intricate engravings and a mystical aura",
                    "Convert an uploaded image of a mythic shield into a 3D mesh and process it with displacement",
                    "Schedule an ART Core job for a high-poly, displacement-enhanced battle axe asset",
                    "Convert a .blend file into a low-poly PBR-textured asset with 1024 UV resolution"
                ],
                "user": [
                    "Upload a style image for custom texturing",
                    "View finished 3D assets",
                    "Download final 3D models"
                ]
            }
        },
        {
            "timestamp": "2025-04-11T14:42:37.069541",
            "suggestions": {
                "prompt": [
                    "Generate a detailed image of an ancient king sword with intricate engravings and royal motifs, then convert it into a 3D mesh and apply high-poly displacement with ART Core before producing a low-poly PBR-textured asset.",
                    "Generate a detailed image of a heroic ornate hammer, convert it into a 3D mesh, run ART Core with 2k resolution and displacement, then create a PBR version with 1024 UV texture resolution.",
                    "Generate a detailed image of a majestic ornate shield, convert it into a 3D mesh, process it with ART Core for high-poly detailing, and finally produce a low-poly PBR-textured asset."
                ],
                "user": [
                    "Upload a custom style image for texturing",
                    "View 3D asset previews",
                    "Download final 3D assets"
                ]
            }
        },
        {
            "timestamp": "2025-04-11T15:30:05.628821",
            "suggestions": {
                "prompt": [
                    "Generate a detailed image of a futuristic battle axe and convert it into a 3D mesh",
                    "Create a high-poly, PBR-textured medieval castle asset using image to 3D conversion",
                    "Produce an epic dragon image and convert it into a fully textured 3D model",
                    "Generate a stylized armored helmet image and convert it into 3D with displacement details"
                ],
                "user": [
                    "Upload a style image for asset restyling",
                    "View current session files",
                    "Download the latest 3D assets"
                ]
            }
        },
        {
            "timestamp": "2025-04-11T15:32:33.037383",
            "suggestions": {
                "prompt": [
                    "Generate a futuristic energy sword image with neon accents, convert it to a 3D mesh, process it in ART Core with displacement at 2k resolution, then create a PBR version.",
                    "Generate a detailed cyberpunk helmet image, convert it to a 3D asset, run ART Core for texture refinement at 2k resolution with displacement, and finish with a PBR conversion.",
                    "Generate a realistic medieval shield image, convert it to a 3D mesh, process it using ART Core with displacement at 2k resolution, then convert it to a low-poly, PBR-textured asset."
                ],
                "user": [
                    "Upload a style image for texture enhancement",
                    "Download final 3D asset",
                    "View generated session files"
                ]
            }
        }
    ],
    "agent": "{\n    \"version\": \"0.1.1\",\n    \"api\": \"openai\",\n    \"model\": \"o3-mini\",\n    \"is_reasoner\": false,\n    \"tool_calling\": true,\n    \"messages\": \"\"\n}",
    "image_agent": "{\n    \"version\": \"0.1.1\",\n    \"api\": \"anthropic\",\n    \"model\": \"claude-3-7-sonnet-20250219\",\n    \"is_reasoner\": false,\n    \"tool_calling\": true,\n    \"messages\": \"gASVFwoAAAAAAABdlH2UKIwJdGltZXN0YW1wlIwIZGF0ZXRpbWWUjAhkYXRldGltZZSTlEMKB+kEDAkkGwI+JpSFlFKUjARkYXRhlH2UKIwEcm9sZZSMBnN5c3RlbZSMB2NvbnRlbnSUWK8JAAAKWW91IGFyZSBhIGNoYXRib3QgYXNzaXN0YW50IGhlbHBpbmcgd2l0aCBkaWZmdXNpb24tYmFzZWQgaW1hZ2UgZ2VuZXJhdGlvbiBhbmQgbWFuaXB1bGF0aW9uIHRhc2tzIGJ5IHVzaW5nIGF2YWlsYWJsZSB0b29scy4KWW91ciByb2xlIGlzIHRvIGFzc2lzdCB1c2VycyB3aXRoIGdlbmVyYXRpbmcsIG1vZGlmeWluZywgYW5kIHByb2Nlc3NpbmcgaW1hZ2VzIHdoaWxlIGVuc3VyaW5nIG9wdGltYWwgcmVzdWx0cyBmb3IgdGhlaXIgc3BlY2lmaWMgbmVlZHMuCllvdXIgdG9vbHMgYXJlIGluIGRldmVsb3BtZW50IHNvIGlmIGl0IHNlZW1zIHRoYXQgeW91IGRvbid0IGhhdmUgb25lIGltcGxlbWVudGVkLAppbmZvcm0gdGhlIHJlcXVlc3RpbmcgYWdlbnQgdGhhdCB5b3UgZG9uJ3QgaGF2ZSBzdWNoIGZ1bmN0aW9uYWxpdHkgYXZhaWxhYmxlLgoKVGV4dCB0byBpbWFnZSB0b29scyBhbmQgZ2VuZXJhbCBwcm9tcHRpbmcgbm90ZXMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KV2hlbiBnZW5lcmF0aW5nIGltYWdlcyBvZiBvYmplY3RzIHRoYXQgYXJlIHJhdGhlciB0YWxsZXIgdGhhbiB3aWRlciwgcmVtZW1iZXIgdG8gdXNlIHJvdWdobHkgY29ycmVjdCBhc3BlY3QgcmF0aW8gKGxhcmdlciBoZWlnaHQsIHNtYWxsZXIgd2lkdGgpLgpJZiB1c2VyIGFza3MgZm9yIHJhbmRvbSBvYmplY3RzL2Rlc2lnbnMvY2hhcmFjdGVycywgcmVtZW1iZXIgbm90IHRvIHVzZSAicmFuZG9tIiBrZXl3b3JkIGluIHRoZSB0ZXh0IHRvIGltYWdlIHRvb2wgcHJvbXB0LCBidXQgZGVzaWduIHNwZWNpZmljIHByb21wdHMuCkZvciBpbWFnZSBnZW5lcmF0aW9uIG1ldGhvZHMgKGB0ZXh0X3RvX2ltYWdlX2ZsdXhgIGFuZCBgdGV4dF90b19pbWFnZV9kYWxsZWApIHVzZSBkZXNjcmlwdGl2ZSBsYW5ndWFnZSBpbiBwb3NpdGl2ZSBwcm9tcHRpbmcsCmhvd2V2ZXIgZm9yIG1ldGhvZHMgYmFzZWQgb24gU3RhYmxlIERpZmZ1c2lvbiBtb2RlbHMgKGBpbWFnZV92YXJpYW50YCwgYHJlc3R5bGVfaW1hZ2VgIGFuZCBgcmVjb2xvcl9pbWFnZWApLAppdCBpcyBiZXR0ZXIgdG8gbGlzdCBlbGVtZW50cy9zaG9ydCBrZXl3b3JkcyB0aGF0IGFyZSBtZWFudCB0byBvY2N1ciBpbiBwb3NpdGl2ZSBwcm9tcHQuCgpJTVBPUlRBTlQ6IGFsd2F5cyBnZW5lcmF0ZSBhIHNpbmdsZSBpbWFnZSB1bmxlc3MgYXNrZWQgZGlmZmVyZW50bHksIG9yIHdoZW5ldmVyIHlvdSB3YW50IHRvIGZpeC9pbXByb3ZlIGdlbmVyYXRpb24gcmVzdWx0LAppZiBzb21ldGhpbmcgc2VlbSBub3QgdG8gYWRoZXJlIHRvIHRoZSBwcm9tcHQgKGJhc2VkIG9uIHRoZSBtYWdlIGRlc2NyaXB0aW9uIHlvdSBnZXQgYWZ0ZXIgY2FsbGluZyBhIHRvb2wpLgoKQWx3YXlzIHRyeSB0byBzZWxlY3QgdGhlIG1vc3QgcmVsZXZhbnQgdGV4dCB0byBpbWFnZSB0b29sIChmb3IgZWFjaCBpbWFnZSBzZXBhcmF0ZWx5KSAtLSBmbHV4IGZvciByZWFsaXNtLCBkYWxsZSBmb3Igc3R5bGl6ZWQvZmFudGFzeQoKIyMgSW1hZ2UgdG8gSW1hZ2UgdG9vbHMgbm90ZXMKWW91IGludGVyYWN0IHdpdGggdG9vbHMgZm9yIHRyYW5zZm9ybWF0aW9uIChgaW1hZ2VfdmFyaWFudGAsIGByZXN0eWxlX2ltYWdlYCBhbmQgYHJlY29sb3JfaW1hZ2VgKS4gTWFueSB0b29scyBzaGFyZSBjb21tb24gcGFyYW1ldGVyczoKCiMjIyAqKkNvbW1vbiBQYXJhbWV0ZXJzKioKLSBgcG9zaXRpdmVfcHJvbXB0YDogQSBkZXRhaWxlZCBkZXNjcmlwdGlvbiBvZiB0aGUgZGVzaXJlZCBvdXRwdXQuCi0gYG5lZ2F0aXZlX3Byb21wdGA6IEEgbGlzdCBvZiBlbGVtZW50cyB0byAqKmF2b2lkKiogKGUuZy4sIGAiYmFkIHF1YWxpdHkiLCAiZnJhbWVkImApLgotIGBzaXplYDogU3BlY2lmaWVzIHRoZSByZXNvbHV0aW9uLCB0eXBpY2FsbHkgaW4gYCJ3aWR0aCB4IGhlaWdodCJgIGZvcm1hdC4KLSBgZGVub2lzZWA6IENvbnRyb2xzIGhvdyBtdWNoIHRoZSBpbnB1dCBpcyBtb2RpZmllZCAoYDAuMSAtIDEuMGApLiAgCiAgICBMb3dlciB2YWx1ZXMgcmV0YWluIG1vcmUgb2YgdGhlIG9yaWdpbmFsIGltYWdlLgotIGBzdHlsZV9pbmZsdWVuY2VgOiAoRm9yIHN0eWxlLWJhc2VkIHRvb2xzKSBEZXRlcm1pbmVzIGhvdyBtdWNoIHRoZSByZWZlcmVuY2Ugc3R5bGUgYWZmZWN0cyB0aGUgb3V0cHV0IChgMC4wIC0gMS4wYCkuCiAgICBVc3VhbGx5IGFyb3VuZCAwLjU1IGlzIHN0cm9uZyBlbm91Z2ggaW5mbHVlbmNlCi0gYHN0eWxlX29ubHlgOiBJZiBgVHJ1ZWAsIGFwcGxpZXMgb25seSBzdHlsaXN0aWMgY2hhbmdlcyB3aGlsZSBpZ25vcmluZyBjb21wb3NpdGlvbi4KICAgIEl0IGNhbiBiZSB1c2VkIHRvIHByZXZlbnQgZ2VuZXJhdGlvbiBwcm9jZXNzIGZyb20gaW5jb3Jwb3JhdGluZyBlbGVtZW50cyB0aGF0IHNlZW1zIGluaGVyZW50bHkgbGlua2VkIHdpdGggc3R5bGUgaW1hZ2UKICAgIGJ1dCBzaG91bGQgbm90IGJlIGluY29ycG9yYXRlZCBpbiBuZXcgaW1hZ2UKlHV1YS4=\"\n}",
    "job_slots": {
        "2d": -1,
        "3d": -1,
        "art": -1,
        "pbr": -1
    },
    "before_first_user_input": false,
    "archived_agents": [
        {
            "agent": "{\n    \"version\": \"0.1.1\",\n    \"api\": \"openai\",\n    \"model\": \"o3-mini\",\n    \"is_reasoner\": false,\n    \"tool_calling\": true,\n    \"messages\": \"\"\n}",
            "image_agent": "{\n    \"version\": \"0.1.1\",\n    \"api\": \"anthropic\",\n    \"model\": \"claude-3-7-sonnet-20250219\",\n    \"is_reasoner\": false,\n    \"tool_calling\": true,\n    \"messages\": \"\"\n}"
        }
    ]
}