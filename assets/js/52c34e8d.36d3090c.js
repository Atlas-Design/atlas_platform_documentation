"use strict";(self.webpackChunkatlas_platform_documentation=self.webpackChunkatlas_platform_documentation||[]).push([[305],{2115:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"export_integration","title":"Export and Integration","description":"Precisely Crafted Assets Generated with Proprietary ART Core Technology","source":"@site/docs/export_integration.mdx","sourceDirName":".","slug":"/export_integration","permalink":"/atlas_platform_documentation/export_integration","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"export_integration","title":"Export and Integration","sidebar":false},"sidebar":"mainSidebar","previous":{"title":"Using User Interface","permalink":"/atlas_platform_documentation/using_user_interface"},"next":{"title":"Known Issues and Limitations","permalink":"/atlas_platform_documentation/known_issues_limitations"}}');var s=t(4848),i=t(8453);const o={id:"export_integration",title:"Export and Integration",sidebar:!1},l=void 0,a={},c=[{value:"\ud83d\ude80 Export and Integration",id:"-export-and-integration",level:2},{value:"\ud83d\udce6 Export Formats",id:"-export-formats",level:3},{value:"\ud83c\udfae Using <code>.glb</code> Files in Unreal Engine",id:"-using-glb-files-in-unreal-engine",level:3}];function d(e){const n={blockquote:"blockquote",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Precisely Crafted Assets Generated with Proprietary ART Core Technology",src:t(8281).A+"",width:"4000",height:"2000"})}),"\n",(0,s.jsx)("p",{align:"left",style:{fontSize:"0.85rem"},children:(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Precisely Crafted Assets Generated with Proprietary ART Core Technology"})})}),"\n",(0,s.jsx)(n.h2,{id:"-export-and-integration",children:"\ud83d\ude80 Export and Integration"}),"\n",(0,s.jsxs)(n.p,{children:["Once you're happy with the generated assets in ",(0,s.jsx)(n.strong,{children:"Atlas Platform"}),", you can easily export them for use in your game engine or DCC tools."]}),"\n",(0,s.jsx)(n.h3,{id:"-export-formats",children:"\ud83d\udce6 Export Formats"}),"\n",(0,s.jsxs)(n.p,{children:["Currently, ",(0,s.jsx)(n.strong,{children:"Atlas Platform"})," supports the following export options:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.strong,{children:[(0,s.jsx)(n.code,{children:".blend"})," files"]}),(0,s.jsx)(n.br,{}),"\n","Native Blender files that you can open and edit directly in the Blender DCC."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.strong,{children:[(0,s.jsx)(n.code,{children:".glb"})," files"]}),(0,s.jsx)(n.br,{}),"\n","A universal format compatible with many game engines and 3D applications such as ",(0,s.jsx)(n.strong,{children:"Unreal Engine"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h3,{id:"-using-glb-files-in-unreal-engine",children:["\ud83c\udfae Using ",(0,s.jsx)(n.code,{children:".glb"})," Files in Unreal Engine"]}),"\n",(0,s.jsxs)(n.p,{children:["When importing ",(0,s.jsx)(n.code,{children:".glb"})," assets into ",(0,s.jsx)(n.strong,{children:"Unreal Engine"}),", it's important to pay special attention to ",(0,s.jsx)(n.strong,{children:"normal maps"}),". Unreal Engine uses ",(0,s.jsx)(n.strong,{children:"DirectX normal maps by default"}),", but it also ",(0,s.jsx)(n.strong,{children:"automatically flips the green (Y) channel"})," during import."]}),"\n",(0,s.jsx)(n.p,{children:"Here\u2019s how to handle it correctly:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["If the normal map is named or marked as ",(0,s.jsx)(n.strong,{children:"DirectX"}),",",(0,s.jsx)(n.br,{}),"\n","\ud83d\udc49 ",(0,s.jsx)(n.strong,{children:"Uncheck"})," the ",(0,s.jsx)(n.strong,{children:'"Flip Green Channel"'})," option in the texture settings after import.",(0,s.jsx)(n.br,{}),"\n","This prevents double-flipping and ensures the normals render properly."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["If the normal map is in ",(0,s.jsx)(n.strong,{children:"OpenGL"})," format,",(0,s.jsx)(n.br,{}),"\n","\u2705 You can leave Unreal\u2019s default ",(0,s.jsx)(n.strong,{children:'"Flip Green Channel"'})," setting ",(0,s.jsx)(n.strong,{children:"enabled"}),".",(0,s.jsx)(n.br,{}),"\n","The engine will flip it once, as expected."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"\ud83d\udd27 Tip: Always double-check the normal map preview after import to catch any unexpected shading artifacts."}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8281:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/03-5b7911db68315d4848b0fca04ac39178.jpg"},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var r=t(6540);const s={},i=r.createContext(s);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);